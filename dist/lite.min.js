var N=[{formatBits:1,codewords_per_block:[-1,7,10,15,20,26,18,20,24,30,18,20,24,26,30,22,24,28,30,28,28,28,28,30,30,26,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30],num_ecc_blocks:[-1,1,1,1,1,1,2,2,2,2,4,4,4,4,4,6,6,6,6,7,8,8,9,9,10,12,12,12,13,14,15,16,17,18,19,19,20,21,22,24,25]},{formatBits:0,codewords_per_block:[-1,10,16,26,18,24,16,18,22,22,26,30,22,22,24,24,28,28,26,26,26,26,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28],num_ecc_blocks:[-1,1,1,1,2,2,4,4,4,5,5,5,8,9,9,10,10,11,13,14,16,17,17,18,20,21,23,25,26,28,29,31,33,35,37,38,40,43,45,47,49]},{formatBits:3,codewords_per_block:[-1,13,22,18,26,18,24,18,22,20,24,28,26,24,20,30,24,28,28,26,30,28,30,30,30,30,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30],num_ecc_blocks:[-1,1,1,2,2,4,4,6,6,8,8,8,10,12,16,12,17,16,18,21,20,23,23,25,27,29,34,34,35,38,40,43,45,48,51,53,56,59,62,65,68]},{formatBits:2,codewords_per_block:[-1,17,28,22,16,22,28,26,26,24,28,24,28,22,24,24,30,28,28,26,28,30,24,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30],num_ecc_blocks:[-1,1,1,2,4,4,4,5,6,8,8,11,11,16,16,18,16,19,21,25,25,25,34,30,32,35,37,40,42,45,48,51,54,57,60,63,66,70,74,77,81]}];var S=[(B,k)=>(B+k)%2==0,(B,k)=>k%2==0,(B,k)=>B%3==0,(B,k)=>(B+k)%3==0,(B,k)=>(Math.floor(B/3)+Math.floor(k/2))%2==0,(B,k)=>B*k%2+B*k%3==0,(B,k)=>(B*k%2+B*k%3)%2==0,(B,k)=>((B+k)%2+B*k%3)%2==0];class D{constructor(B,k){this.w=B,this.h=k,this.data=new Uint8Array(Math.ceil(B*k/4))}#B(B,k){let C=k*this.w+B;return[C>>2,(C&3)<<1]}set(B=0,k=0,C=1){if(B<0||B>=this.w||k<0||k>=this.h)return;let[M,Q]=this.#B(B,k),R=3<<Q,q=(C&1)<<Q|1<<Q+1;this.data[M]=this.data[M]&~R|q}get(B=0,k=0){if(B<0||B>=this.w||k<0||k>=this.h)return 0;let[C,M]=this.#B(B,k);return this.data[C]>>M&1}used(B=0,k=0){if(B<0||B>=this.w||k<0||k>=this.h)return 0;let[C,M]=this.#B(B,k);return this.data[C]>>M+1&1}*tiles(B=null){let{w:k,h:C,data:M}=this,Q=k*C;for(let R=0;R<M.length;R++){let q=M[R];if(q===0)continue;let c=R<<2;for(let E=0;E<4;E++){let F=c+E;if(F>=Q)break;let J=E<<1;if(!(q&2<<J))continue;let L=q&1<<J;if(B==null||!B==!L)yield[F%k,Math.floor(F/k)]}}}static union(...B){let k=Math.max(...B.map((Q)=>Q.w)),C=Math.max(...B.map((Q)=>Q.h)),M=new D(k,C);for(let Q of B)for(let[R,q]of Q.tiles())if(!M.get(R,q))M.set(R,q,Q.get(R,q));return M}static erase(B,...k){let C=new D(B.w,B.h);for(let[M,Q]of B.tiles())if(!k.some((R)=>R.used(M,Q)))C.set(M,Q,B.get(M,Q));return C}static intersect(B,...k){let C=new D(B.w,B.h);for(let[M,Q]of B.tiles())if(k.every((R)=>R.used(M,Q)))C.set(M,Q,B.get(M,Q));return C}}class T{constructor({version:B=2,ecl:k=0,mask:C=0,codewords:M=new Uint8Array}={}){this.version=B,this.ecl=k,this.mask=C,this.codewords=M}get size(){return this.version*4+17}get functional_grid(){let{finder_grid:B,timing_grid:k,alignment_grid:C,version_grid:M,format_grid:Q}=this;return D.union(B,k,C,M,Q)}get finder_grid(){let{size:B}=this,k=new D(B,B);for(let C=0;C<8;C++)for(let M=0;M<8;M++){let Q=Math.max(Math.abs(3-C),Math.abs(3-M))!=2&&!(C==7||M==7);k.set(C,M,Q),k.set(B-C-1,M,Q),k.set(C,B-M-1,Q)}return k}get timing_grid(){let{size:B}=this,k=new D(B,B);for(let C=8;C<=B-8;C++){let M=C%2==0;k.set(6,C,M),k.set(C,6,M)}return k}get alignment_positions(){let{version:B,size:k}=this;if(B==1)return[];let C=Math.floor(B/7)+2,M=B==32?26:Math.ceil((B*4+4)/(C*2-2))*2,Q=[6];for(let R=k-7;Q.length<C;R-=M)Q.splice(1,0,R);return Q}get alignment_grid(){let{version:B,size:k,alignment_positions:C}=this,M=new D(k,k),Q=C.length;for(let R=0;R<Q;R++)for(let q=0;q<Q;q++)if(!(R==0&&q==0||R==0&&q==Q-1||R==Q-1&&q==0))for(let c=-2;c<=2;c++)for(let E=-2;E<=2;E++){let F=Math.max(Math.abs(E),Math.abs(c))==1?0:1;M.set(C[R]+E,C[q]+c,F)}return M}get format_grid(){let{ecl:B,mask:k,size:C}=this,M=new D(C,C),Q=N[B].formatBits<<3|k,R=Q;for(let c=0;c<10;c++)R=R<<1^(R>>>9)*1335;let q=(Q<<10|R)^21522;for(let c=0;c<=5;c++)M.set(8,c,q>>c);M.set(8,7,q>>6),M.set(8,8,q>>7),M.set(7,8,q>>8);for(let c=9;c<15;c++)M.set(14-c,8,q>>c);for(let c=0;c<8;c++)M.set(this.size-1-c,8,q>>c);for(let c=8;c<15;c++)M.set(8,this.size-15+c,q>>c);return M.set(8,this.size-8,1),M}get version_grid(){let{version:B,size:k}=this,C=new D(k,k);if(B<7)return C;let M=B;for(let R=0;R<12;R++)M=M<<1^(M>>>11)*7973;let Q=B<<12|M;for(let R=0;R<18;R++){let q=k-11+R%3,c=Math.floor(R/3);C.set(q,c,Q>>R),C.set(c,q,Q>>R)}return C}get data_grid(){let{size:B,functional_grid:k,codewords:C,mask:M}=this,Q=new D(B,B),R=0;for(let q=B-1;q>=1;q-=2){if(q===6)q=5;for(let c=0;c<B;c++)for(let E=0;E<2;E++){let F=q-E,H=(q+1&2)===0?B-1-c:c;if(!k.used(F,H)){let K=0;if(R<C.length*8){let U=Math.floor(R/8),V=7-R%8;K=C[U]>>V&1}K^=S[M](F,H),Q.set(F,H,K),R++}}}return Q}get grid(){let{functional_grid:B,data_grid:k}=this;return D.union(B,k)}static create(){}static save(){}static load(){}toString(){return`(QRCode) version:${this.version}, ecl:${this.ecl}, mask:${this.mask}`}[Bun.inspect.custom](){return`(QRCode) version:${this.version}, ecl:${this.ecl}, mask:${this.mask}`}}export{T as QRCode,D as Grid};
