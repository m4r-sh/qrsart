var V=[{formatBits:1,codewords_per_block:[-1,7,10,15,20,26,18,20,24,30,18,20,24,26,30,22,24,28,30,28,28,28,28,30,30,26,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30],num_ecc_blocks:[-1,1,1,1,1,1,2,2,2,2,4,4,4,4,4,6,6,6,6,7,8,8,9,9,10,12,12,12,13,14,15,16,17,18,19,19,20,21,22,24,25]},{formatBits:0,codewords_per_block:[-1,10,16,26,18,24,16,18,22,22,26,30,22,22,24,24,28,28,26,26,26,26,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28],num_ecc_blocks:[-1,1,1,1,2,2,4,4,4,5,5,5,8,9,9,10,10,11,13,14,16,17,17,18,20,21,23,25,26,28,29,31,33,35,37,38,40,43,45,47,49]},{formatBits:3,codewords_per_block:[-1,13,22,18,26,18,24,18,22,20,24,28,26,24,20,30,24,28,28,26,30,28,30,30,30,30,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30],num_ecc_blocks:[-1,1,1,2,2,4,4,6,6,8,8,8,10,12,16,12,17,16,18,21,20,23,23,25,27,29,34,34,35,38,40,43,45,48,51,53,56,59,62,65,68]},{formatBits:2,codewords_per_block:[-1,17,28,22,16,22,28,26,26,24,28,24,28,22,24,24,30,28,28,26,28,30,24,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30],num_ecc_blocks:[-1,1,1,2,4,4,4,5,6,8,8,11,11,16,16,18,16,19,21,25,25,25,34,30,32,35,37,40,42,45,48,51,54,57,60,63,66,70,74,77,81]}];var W=[(B,M)=>(B+M)%2==0,(B,M)=>M%2==0,(B,M)=>B%3==0,(B,M)=>(B+M)%3==0,(B,M)=>(Math.floor(B/3)+Math.floor(M/2))%2==0,(B,M)=>B*M%2+B*M%3==0,(B,M)=>(B*M%2+B*M%3)%2==0,(B,M)=>((B+M)%2+B*M%3)%2==0];class H{constructor(B,M){this.w=B,this.h=M,this.data=new Uint8Array(Math.ceil(B*M/4))}#B(B,M){let k=M*this.w+B;return[k>>2,(k&3)<<1]}set(B=0,M=0,k=1){if(B<0||B>=this.w||M<0||M>=this.h)return;let[c,q]=this.#B(B,M),D=3<<q,F=(k&1)<<q|1<<q+1;this.data[c]=this.data[c]&~D|F}get(B=0,M=0){if(B<0||B>=this.w||M<0||M>=this.h)return 0;let[k,c]=this.#B(B,M);return this.data[k]>>c&1}used(B=0,M=0){if(B<0||B>=this.w||M<0||M>=this.h)return 0;let[k,c]=this.#B(B,M);return this.data[k]>>c+1&1}*tiles(B=null){let{w:M,h:k,data:c}=this,q=M*k;for(let D=0;D<c.length;D++){let F=c[D];if(F===0)continue;let E=D<<2;for(let J=0;J<4;J++){let K=E+J;if(K>=q)break;let N=J<<1;if(!(F&2<<N))continue;let S=F&1<<N;if(B===!0&&!S)continue;if(B===!1&&S)continue;yield[K%M,Math.floor(K/M)]}}}static union(...B){let M=Math.max(...B.map((q)=>q.w)),k=Math.max(...B.map((q)=>q.h)),c=new H(M,k);for(let q of B)for(let[D,F]of q.tiles())if(!c.get(D,F))c.set(D,F,q.get(D,F));return c}static erase(B,...M){let k=new H(B.w,B.h);for(let[c,q]of B.tiles())if(!M.some((D)=>D.used(c,q)))k.set(c,q,B.get(c,q));return k}static intersect(B,...M){let k=new H(B.w,B.h);for(let[c,q]of B.tiles())if(M.every((D)=>D.used(c,q)))k.set(c,q,B.get(c,q));return k}}class U{constructor({version:B=2,ecl:M=0,mask:k=0,bitstring:c=new Uint8Array}={}){this.version=B,this.ecl=M,this.mask=k,this.bitstring=c}get size(){return this.version*4+17}get functional_grid(){let{finder_grid:B,timing_grid:M,alignment_grid:k,version_grid:c,format_grid:q}=this;return H.union(B,M,k,c,q)}get finder_grid(){let{size:B}=this,M=new H(B,B);for(let k=0;k<8;k++)for(let c=0;c<8;c++){let q=Math.max(Math.abs(3-k),Math.abs(3-c))!=2&&!(k==7||c==7);M.set(k,c,q),M.set(B-k-1,c,q),M.set(k,B-c-1,q)}return M}get timing_grid(){let{size:B}=this,M=new H(B,B);for(let k=8;k<=B-8;k++){let c=k%2==0;M.set(6,k,c),M.set(k,6,c)}return M}get alignment_positions(){let{version:B,size:M}=this;if(B==1)return[];let k=Math.floor(B/7)+2,c=B==32?26:Math.ceil((B*4+4)/(k*2-2))*2,q=[6];for(let D=M-7;q.length<k;D-=c)q.splice(1,0,D);return q}get alignment_grid(){let{version:B,size:M,alignment_positions:k}=this,c=new H(M,M),q=k.length;for(let D=0;D<q;D++)for(let F=0;F<q;F++)if(!(D==0&&F==0||D==0&&F==q-1||D==q-1&&F==0))for(let E=-2;E<=2;E++)for(let J=-2;J<=2;J++){let K=Math.max(Math.abs(J),Math.abs(E))==1?0:1;c.set(k[D]+J,k[F]+E,K)}return c}get format_grid(){let{ecl:B,mask:M,size:k}=this,c=new H(k,k),q=V[B].formatBits<<3|M,D=q;for(let E=0;E<10;E++)D=D<<1^(D>>>9)*1335;let F=(q<<10|D)^21522;for(let E=0;E<=5;E++)c.set(8,E,F>>E);c.set(8,7,F>>6),c.set(8,8,F>>7),c.set(7,8,F>>8);for(let E=9;E<15;E++)c.set(14-E,8,F>>E);for(let E=0;E<8;E++)c.set(this.size-1-E,8,F>>E);for(let E=8;E<15;E++)c.set(8,this.size-15+E,F>>E);return c.set(8,this.size-8,1),c}get version_grid(){let{version:B,size:M}=this,k=new H(M,M);if(B<7)return k;let c=B;for(let D=0;D<12;D++)c=c<<1^(c>>>11)*7973;let q=B<<12|c;for(let D=0;D<18;D++){let F=M-11+D%3,E=Math.floor(D/3);k.set(F,E,q>>D),k.set(E,F,q>>D)}return k}get data_grid(){let{size:B,functional_grid:M,bitstring:k,mask:c}=this,q=new H(B,B),D=0;for(let F=B-1;F>=1;F-=2){if(F===6)F=5;for(let E=0;E<B;E++)for(let J=0;J<2;J++){let K=F-J,L=(F+1&2)===0?B-1-E:E;if(!M.used(K,L)){let T=0;if(D<k.length*8){let X=Math.floor(D/8),Y=7-D%8;T=k[X]>>Y&1}T^=W[c](K,L),q.set(K,L,T),D++}}}return q}get grid(){let{functional_grid:B,data_grid:M}=this;return H.union(B,M)}static save(B){let{version:M,ecl:k,mask:c,bitstring:q}=B;return new Uint8Array([M&255,(k&3)<<3|(c&7)<<5,...q])}static load(B){return new U({version:B[0],ecl:B[1]>>3&3,mask:B[1]>>5&7,bitstring:B.slice(2)})}}export{U as QRCode,H as Grid};
